services:
  frontend:
    build: ./routine-scheduler-frontend
    container_name: routine-scheduler-frontend
    ports:
      - "3000"
    depends_on:
      - backend
    # volumes:
    #   - ./routine-scheduler-frontend:/app
    #   - /app/node_modules
    # networks:
    #   - app-network

  backend:
    build: ./routine-scheduler-backend
    container_name: routine-scheduler-backend
    ports:
      - "4200"
    env_file:
      - ./.env
    volumes:
      - ./db-backups:/backups
    # networks:
    #   - app-network
    depends_on:
      - db

  db:
    container_name: routine-scheduler-db
    image: postgres:15-alpine3.20
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/postgresql/data
      - ./db-backups:/backups
    # networks:
    #   - app-network

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "127.0.0.1:5050:80"
    # networks:
    #   - app-network
    depends_on:
      - db

# networks:
#   app-network:
#     driver: bridge

  nginx:
    image: nginx:alpine
    container_name: routine-scheduler-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro   # mount certs here
    depends_on:
      - frontend
      - backend
      - pgadmin
 


volumes:
  db-data:
    driver: local
